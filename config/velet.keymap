/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";


        pu {
            bindings = <&kp PG_UP>;
            key-positions = <21 22>;
        };

        pd {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <20 21>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp ENTER>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
    &kp Q      &kp W      &kp E      &kp R      &kp T         &kp Y    &kp U      &kp I      &kp O      &kp P
        &kp A     &kp B      &kp V      &kp F  &kp G         &kp H    &kp N  &kp M &kp L &kp C
 &mt LWIN Z &mt LALT X &mt LSFT K &mt LCTL D &kp S         &kp K    &mt RCTL J &mt RSFT COMMA &mt RALT DOT &mt RWIN S
         &kp TAB     &tog SYM  &lt SYM ESC  &lt NUM SPACE            &lt QWE BSPC  &lt MSE RET &tog DVRK &kp RCTL
            >;

            label = "Base";
        };

		    	dvorak_layer {
            label = "DVRK";
			bindings = <
        &kp SINGLE_QUOTE     &kp COMMA   &kp DOT   &kp P   &kp Y         &kp F    &kp G     &kp C      &kp R      &kp L
        &kp A &kp O &kp E &kp U &kp I                                     &kp D   &kp H &kp T &kp N & S 
 	&mt LWIN SEMI    &mt LALT Q      &mt LSFT J      &mt LCTL K  &kp X       &kp B  &mt RCTL M    &mt RSFT W  &mt RALT V &mt RWIN Z 
              &trans      &trans   &lt SYM ESC  &lt NUM SPACE                 &lt QWE BSPC  &lt MSE RET &trans &trans
        >;
        };

        NUMBER {
            bindings = <            
                &kp UP  &kp LEFT  &kp DOWN   &kp RIGHT   &kp F4      &kp MINUS    &kp SEMI  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH
                &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                &kp N6   &mt RCTL N7  &mt RSFT N8  &mt RALT N9  &mt RWIN N0
                &kp EXCLAMATION  &kp QUESTION  &kp LESS_THAN   &kp GREATER_THAN   &kp GRAVE     &kp UNDERSCORE   &kp COLON  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SINGLE_QUOTE
           &trans      &trans      &trans  &kp BSPC           &kp SPACE  &kp C_MENU      &kp DELETE  &trans
            >;

            label = "Num";
        };

        ICON {
            bindings = <      
                &kp C_VOL_UP    &kp LEFT       &msc SCRL_UP         &kp RIGHT   &kp C_BRIGHTNESS_INC      &kp PLUS  &kp EQUAL  &kp HOME  &kp PAGE_UP  &kp TILDE
                &kp C_POWER   &kp C_PREVIOUS &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE                &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
                &kp C_VOL_DN   &kp RET         &msc SCRL_DOWN          &kp BSPC    &kp C_BRIGHTNESS_DEC       &kp BACKSLASH  &kp MINUS   &kp END  &kp PAGE_DOWN  &kp TILDE2  
               &trans         &trans     &lt MSE SPACE  &kp ESC         &trans        &trans        &trans         &trans
            >;

            label = "SYM";
        };

        LEFTPAD {
            bindings = <
          &mkp RCLK  &none   &mmv MOVE_UP   &none   &none          &kp C_BRIGHTNESS_INC  &kp PAGE_UP   &msc SCRL_UP  &kp PAGE_DOWN    &kp C_POWER
                &mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT   &bt BT_CLR                 &kp C_BRIGHTNESS_DEC  &msc SCRL_LEFT  &msc SCRL_DOWN   &msc SCRL_RIGHT  &kp K_POWER
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_BACKLIGHT_TOGGLE  &kp K_APP      &none       &kp K_LOCK       &kp C_SLEEP_MODE
          &none            &kp N0  &kp PERIOD  &kp TAB  &kp SPACE      &kp BSPC    &kp DELETE  &trans
            >;

            label = "MSE";
        };

        BLUETOOTH {
            bindings = <
	&kp A     &kp W      &kp E      &kp R      &kp T         &kp Y    &kp U      &kp I      &kp O      &kp A
             		&kp Q &kp S &kp D &kp F &kp G         &kp H    &kp J &kp K &kp L &kp P 
                &kp Z     &kp X      &kp C      &kp V  &kp B         &kp N    &kp M  &kp Y &kp N &kp B
               &out OUT_BLE    &out OUT_USB   &out OUT_TOG   &trans         &trans       &trans  &trans  &trans
            >;

            label = "QWE";
        };

        ARROWS {
            bindings = <
&bootloader  &trans          &kp UP_ARROW    &trans           &kp TAB       &trans     &trans          &kp UP          &trans           &bootloader
&trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans       &trans          &trans          &trans           &trans        &trans     &trans          &trans          &trans           &trans
             &trans          &trans          &trans           &kp LEFT_ALT  &kp SPACE  &kp BSPC        &kp DELETE      &trans
            >;

            label = "Arrow";
        };

        CONTROLS {
            bindings = <
&kp LC(J)            &kp LC(LA(W))  &kp LC(LSHFT)    &kp LC(Y)  &kp LG(TAB)  &msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT
&mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)        &kp LC(F)  &kp LG(L)    &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&kp LC(Z)            &kp LC(X)      &mt LCTRL LC(C)  &kp LC(V)  &kp LC(B)    &trans          &mkp MB4        &mkp MB5        &kp LALT         &kp TAB
                     &trans         &kp LEFT_ALT     &kp TAB    &trans       &mkp LCLK       &mkp MCLK       &mkp RCLK       &trans
            >;

            label = "Ctrls";
        };

        Mouse {
            bindings = <
&msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT  &trans  &trans  &trans  &trans  &trans
&trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans           &trans  &trans  &trans  &trans  &trans
&trans          &trans          &mkp MB4        &mkp MB5         &trans           &trans  &trans  &trans  &trans  &trans
                &trans          &mkp MCLK       &mkp LCLK        &mkp RCLK        &trans  &trans  &trans  &trans
            >;

            label = "Mouse";
        };
    };
};
